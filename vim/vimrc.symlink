syntax on
colorscheme torte
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Color
Plugin 'flazz/vim-colorschemes'
Plugin 'vim-scripts/ScrollColors'

" General
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-abolish'
Plugin 'tpope/vim-repeat'
Plugin 'AndrewRadev/splitjoin.vim'
"   Plugin 'svermeulen/vim-easyclip'
"   
" Completion
Plugin 'Shougo/neocomplete'
Plugin 'VimCompletesMe'
  
" Go
Plugin 'fatih/vim-go'
Plugin 'SirVer/ultisnips'

" Perl
Plugin 'rdunklau/vim-perltidy'
Plugin 'vim-scripts/perlprove.vim'

" Javascript/HTML
" -- this does not work at all...
"Plugin 'vim-scripts/JavaScript-Indent'
" Plugin 'maksimr/vim-jsbeautify'

call vundle#end()

filetype on
"command -range=% -nargs=* Tidy <line1>,<line2>!perltidy -q
noremap <C-F6> :Tidy<CR>






" au BufWritePre *.p[lm],*.t call s:PerlTidy()
autocmd BufWritePre * if &ft == 'perl' | call s:PerlTidy()

" search options
set ignorecase
set smartcase
set incsearch
set hlsearch

set autochdir
set number


" Setting up the directories {
  set undofile                       " so is persistent undo ...
  set copyindent                  " (ci) when auto-indenting, use the indenting format of the previous line
  set undolevels=1000                " maximum number of changes that can be undone
  set undoreload=10000               " maximum number lines to save for undo on a buffer reload
  set backup
  set backupdir=$HOME/.vimbackup/    " but not when they clog .
  set directory=$HOME/.vimswap/      " Same for swap files
  set viewdir=$HOME/.vimviews/       " same for view files
  set undodir=$HOME/.vimviews/       " same for undo files
  "" Creating directories if they don't exist
  silent execute '!mkdir -p $HOME/.vimbackup'
  silent execute '!mkdir -p $HOME/.vimswap'
  silent execute '!mkdir -p $HOME/.vimviews'
  "au BufWinLeave * silent! mkview    " make vim save view (state) (folds, cursor, etc)
  "au BufWinEnter * silent! loadview  " make vim load view (state) (folds, cursor, etc)
" }


colorscheme torte
let g:go_auto_type_info = 1
let g:go_fmt_command = "goimports"
autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
